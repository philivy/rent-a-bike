optmization db.reservation
-- Activer l'extension n√©cessaire pour la contrainte d'exclusion
CREATE EXTENSION IF NOT EXISTS btree_gist;

-- Table pour les r√©servations
CREATE TABLE reservation (
    id SERIAL PRIMARY KEY,
    client_id INTEGER REFERENCES client(id) ON DELETE CASCADE,
    article_id INTEGER REFERENCES article(id) ON DELETE SET NULL,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    commentaire TEXT,
    etat INTEGER DEFAULT 0 CHECK (etat IN (0, 1, 2)), -- 0: en cours, 1: annul√©e, 2: archiv√©e
    magasin_id INTEGER REFERENCES magasin_location(id) ON DELETE SET NULL,
    CHECK (start_date < end_date) -- V√©rifie que la date de d√©but est avant la fin
);

-- üö≤ Emp√™cher la double r√©servation d'un m√™me article sur une p√©riode qui se chevauche
CREATE INDEX idx_reservation_article ON reservation (article_id);
CREATE INDEX idx_reservation_dates ON reservation (start_date, end_date);

ALTER TABLE reservation
ADD CONSTRAINT reservation_overlap_check
EXCLUDE USING GIST (
    article_id WITH =,
    daterange(start_date, end_date, '[]') WITH &&
) WHERE (article_id IS NOT NULL AND etat = 0);

